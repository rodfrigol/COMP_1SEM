// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "06/10/2020 03:08:44"

// 
// Device: Altera EP4CE6E22C8 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module q53 (
	Si,
	Ai,
	Eimenos1,
	Bi,
	Ei);
output 	Si;
input 	Ai;
input 	Eimenos1;
input 	Bi;
output 	Ei;

// Design Ports Information
// Si	=>  Location: PIN_32,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Ei	=>  Location: PIN_31,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Ai	=>  Location: PIN_34,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Eimenos1	=>  Location: PIN_39,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Bi	=>  Location: PIN_33,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Si~output_o ;
wire \Ei~output_o ;
wire \Eimenos1~input_o ;
wire \Ai~input_o ;
wire \Bi~input_o ;
wire \inst7~0_combout ;
wire \inst10~combout ;


// Location: IOOBUF_X0_Y6_N16
cycloneive_io_obuf \Si~output (
	.i(\inst7~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Si~output_o ),
	.obar());
// synopsys translate_off
defparam \Si~output .bus_hold = "false";
defparam \Si~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y7_N2
cycloneive_io_obuf \Ei~output (
	.i(\inst10~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Ei~output_o ),
	.obar());
// synopsys translate_off
defparam \Ei~output .bus_hold = "false";
defparam \Ei~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X1_Y0_N15
cycloneive_io_ibuf \Eimenos1~input (
	.i(Eimenos1),
	.ibar(gnd),
	.o(\Eimenos1~input_o ));
// synopsys translate_off
defparam \Eimenos1~input .bus_hold = "false";
defparam \Eimenos1~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y5_N15
cycloneive_io_ibuf \Ai~input (
	.i(Ai),
	.ibar(gnd),
	.o(\Ai~input_o ));
// synopsys translate_off
defparam \Ai~input .bus_hold = "false";
defparam \Ai~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y6_N22
cycloneive_io_ibuf \Bi~input (
	.i(Bi),
	.ibar(gnd),
	.o(\Bi~input_o ));
// synopsys translate_off
defparam \Bi~input .bus_hold = "false";
defparam \Bi~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y1_N0
cycloneive_lcell_comb \inst7~0 (
// Equation(s):
// \inst7~0_combout  = \Eimenos1~input_o  $ (\Ai~input_o  $ (\Bi~input_o ))

	.dataa(\Eimenos1~input_o ),
	.datab(\Ai~input_o ),
	.datac(\Bi~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst7~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst7~0 .lut_mask = 16'h9696;
defparam \inst7~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y1_N18
cycloneive_lcell_comb inst10(
// Equation(s):
// \inst10~combout  = (\Eimenos1~input_o  & ((\Bi~input_o ) # (!\Ai~input_o ))) # (!\Eimenos1~input_o  & (!\Ai~input_o  & \Bi~input_o ))

	.dataa(\Eimenos1~input_o ),
	.datab(\Ai~input_o ),
	.datac(\Bi~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst10~combout ),
	.cout());
// synopsys translate_off
defparam inst10.lut_mask = 16'hB2B2;
defparam inst10.sum_lutc_input = "datac";
// synopsys translate_on

assign Si = \Si~output_o ;

assign Ei = \Ei~output_o ;

endmodule
